/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    //testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'

    //testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'com.thoughtworks.xstream:xstream:1.4.14'
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'

    implementation 'mysql:mysql-connector-java:8.0.22'
    implementation 'org.ainslec:picocog:1.0.2'
    // https://mvnrepository.com/artifact/xmlpull/xmlpull
    implementation 'xmlpull:xmlpull:1.1.3.1'
    // https://mvnrepository.com/artifact/xpp3/xpp3
    implementation 'xpp3:xpp3:1.1.4c'

}


// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'KinoApplication.KinoApplication'
}

// Konfigurieren der jar-Task
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes(
            'Main-Class': application.mainClass
        )
    }

    // Fügen Sie alle Runtime-Abhängigkeiten in das JAR ein
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


//tasks.named('test') {
//    // Use JUnit Platform for unit tests.
//    useJUnitPlatform()
//}

run {

standardInput = System.in

}
